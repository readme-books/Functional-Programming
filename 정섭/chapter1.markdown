# chapter 1
이 책에서는 실무에서 사용 가능한 함수형 프로그래밍에 대해 배운다.

### 함수형 프로그래밍
  - 수학 함수를 사용하고 부수 효과를 피하는 것이 특징인 프로그래밍 패러다임
  - 부수 효과 없이 순수 함수만 사용하는 프로그래밍 스타일
  - 부수 효과: 함수가 리턴값 이외에 하는 모든 일
  - 순수 함수: 인자에만 의존하고 부수 효과가 없는 함수
### 하지만 실용적인 측면에서는 부수 효과가 필요하며 함수형 프로그래밍은 부수 효과를 잘 다룰 수 있다.
  - 필요할 때는 부수 효과를 사용해야 한다.
  - 순수하지 않은 함수를 잘 다룰 수 있는 기술이 많이 있다.
  - 함수형 프로그래밍은 실용적이다.
### 액션, 계산, 데이터 코드 구분하기
  - 액션: 실행 시점이나 횟수 또는 둘 다에 의존.
      - 시간이 지남에 따라 안전하게 상태를 바꿀 수 있는 방법
      - 순서를 보장하는 방법
      - 액션이 정확히 한 번만 실행되게 보장하는 방법
  - 계산: 입력값으로 출력값을 만드는 것. 같은 입력값을 가지고 계산하면 항상 같은 결과값이 나온다.
      - 정확성을 위한 정적 분석
      - 소프트웨어에서 쓸 수 있는 수학적 지식
      - 테스트 전략
  - 데이터: 이벤트에 대해 기록한 사실. 실행하지 않아도 데이터 자체로 의미가 있음
      - 효율적으로 접근하기 위해 데이터를 구성하는 방법
      - 데이터를 보관하기 위한 기술
      - 데이터를 이용해 중요한 것을 발견하는 원칙
  - 함수형 프로그래밍은 분산 시스템에 잘 어울린다
      - 분산 시스템 규칙
          - 메시지 순서가 바뀔 수 있다.
          - 메시지는 한 번 이상 도착 할 수 있고 도착하지 않을 수도 있다.
          - 응답을 받지 못하면 무슨 일이 생겼는지 알 수 없다.
